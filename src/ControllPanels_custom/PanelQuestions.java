/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ControllPanels_custom;

import DataBox_cutom.Database0;
import DataBox_cutom.Questions;
import ControllPanels.Controll;
import JSO.Com.DataBox.ControolPack;
import JSO.Com.DataBox.DataPackString;
import JSO.Com.Main.TimerTimer;
import JSO.Com.Main.TimerUser;
import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

/**
 *
 * @author shayan
 */
public class PanelQuestions extends javax.swing.JPanel implements TimerUser {

    EstekanBase naMain;
    Controll controll;
    TimerTimer timer;
    Sounds2 sounds;
    ControolPack controolPack;
    Database0 database;
    boolean newsha, gozselected;

    int selectedBasket, questionIndexSelected;
    int gozSelectedN;
    long timeMain;
    int timerq;
    private boolean timerActive;

    /**
     * Creates new form QuestionPanel
     */
    public PanelQuestions(EstekanBase naMain) {
        newsha = false;
        initComponents();
        this.naMain = naMain;
        this.controll = naMain.controll;
        this.controolPack = controll.getControolPack();
        this.database = controll.getDatabase();

        timer = new TimerTimer(this, 0, 0, 600, 0);
        timer.setWait(10);
        timer.setWaitTimeAbselute(true);
        timer.setActive(true);
        timer.start();

        sounds = controll.getSounds();
        initPanel();
        newsha = true;
        jComboBoxBasket.setSelectedIndex(0);
    }

    private void initPanel() {
        jComboBoxBasket.removeAll();
        jComboBoxBasket.removeAllItems();
        for (int i = 0; i < database.getqBAsketname().length; i++) {
            jComboBoxBasket.addItem(database.getqBAsketname(i));
        }
//        jButtonshow.setEnabled(false);
    }

    public boolean isGozselected() {
        return gozselected;
    }

    public int getGozSelected() {
        return gozSelectedN;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupCorrectAnswer = new javax.swing.ButtonGroup();
        jPanel31 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jComboBoxBasket = new javax.swing.JComboBox<>();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jButtonclearAll = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jComboBoxindex = new javax.swing.JComboBox<>();
        jCheckBoxUsed = new javax.swing.JCheckBox();
        jPanel21 = new javax.swing.JPanel();
        jSpinnertimeMain = new javax.swing.JSpinner();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jToggleButtonShow = new javax.swing.JToggleButton();
        jPanel30 = new javax.swing.JPanel();
        jToggleButtonDidan0 = new javax.swing.JToggleButton();
        jPanel26 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jToggleButtonDidan5 = new javax.swing.JToggleButton();
        jSpinnertime = new javax.swing.JSpinner();
        jToggleButtonTimer = new javax.swing.JToggleButton();
        jButton5 = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel20 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel25 = new javax.swing.JPanel();
        jButtonSelect = new javax.swing.JButton();
        jPanel22 = new javax.swing.JPanel();
        jTextFieldQ1 = new javax.swing.JTextField();
        jToggleButtonDidan1 = new javax.swing.JToggleButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jButtonSelect1 = new javax.swing.JButton();
        jPanel23 = new javax.swing.JPanel();
        jTextFieldQ2 = new javax.swing.JTextField();
        jToggleButtonDidan2 = new javax.swing.JToggleButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        jTextFieldQ3 = new javax.swing.JTextField();
        jToggleButtonDidan3 = new javax.swing.JToggleButton();
        jPanel8 = new javax.swing.JPanel();
        jCheckBox3 = new javax.swing.JCheckBox();
        jButtonSelect2 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jTextFieldQ4 = new javax.swing.JTextField();
        jToggleButtonDidan4 = new javax.swing.JToggleButton();
        jPanel12 = new javax.swing.JPanel();
        jCheckBox4 = new javax.swing.JCheckBox();
        jButtonSelect3 = new javax.swing.JButton();

        setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setLayout(new java.awt.GridLayout(0, 1));

        jPanel18.setLayout(new java.awt.GridLayout(1, 0));

        jPanel13.setLayout(new java.awt.GridLayout(0, 1));

        jPanel2.setLayout(new java.awt.BorderLayout());

        jComboBoxBasket.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxBasket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxBasketActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBoxBasket, java.awt.BorderLayout.WEST);

        jPanel10.setLayout(new java.awt.GridLayout(1, 0));

        jPanel11.setLayout(new java.awt.GridLayout(1, 0));

        jButton2.setText("افزودن سوال");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton2);

        jButton1.setText("فایل");
        jButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton1);

        jButton3.setText("کاستن سوال");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel11.add(jButton3);

        jPanel15.setBackground(new java.awt.Color(204, 0, 0));

        jButtonclearAll.setText("--");
        jButtonclearAll.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonclearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonclearAllActionPerformed(evt);
            }
        });
        jPanel15.add(jButtonclearAll);

        jPanel11.add(jPanel15);

        jPanel10.add(jPanel11);

        jPanel2.add(jPanel10, java.awt.BorderLayout.CENTER);

        jPanel13.add(jPanel2);

        jPanel17.setLayout(new java.awt.BorderLayout());

        jComboBoxindex.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxindex.setAutoscrolls(true);
        jComboBoxindex.setCursor(new java.awt.Cursor(java.awt.Cursor.NW_RESIZE_CURSOR));
        jComboBoxindex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxindexActionPerformed(evt);
            }
        });
        jPanel17.add(jComboBoxindex, java.awt.BorderLayout.CENTER);

        jCheckBoxUsed.setText("سوخته");
        jCheckBoxUsed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxUsedActionPerformed(evt);
            }
        });
        jPanel17.add(jCheckBoxUsed, java.awt.BorderLayout.LINE_START);

        jPanel13.add(jPanel17);

        jPanel21.setLayout(new java.awt.GridLayout(1, 0));

        jSpinnertimeMain.setModel(new javax.swing.SpinnerNumberModel(20, null, null, 1));
        jSpinnertimeMain.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnertimeMainStateChanged(evt);
            }
        });
        jPanel21.add(jSpinnertimeMain);

        jButton4.setText("بروز رسانی");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel21.add(jButton4);

        jButton6.setText("Reset q");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel21.add(jButton6);

        jToggleButtonShow.setText("گزینه ها");
        jToggleButtonShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonShowActionPerformed(evt);
            }
        });
        jPanel21.add(jToggleButtonShow);

        jPanel13.add(jPanel21);

        jPanel18.add(jPanel13);

        jPanel1.add(jPanel18);

        jPanel30.setLayout(new java.awt.BorderLayout());

        jToggleButtonDidan0.setText("دیدن");
        jToggleButtonDidan0.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jToggleButtonDidan0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonDidan0ActionPerformed(evt);
            }
        });
        jPanel30.add(jToggleButtonDidan0, java.awt.BorderLayout.WEST);

        jPanel26.setLayout(new java.awt.GridLayout(0, 1));

        jPanel19.setLayout(new java.awt.GridLayout(1, 0));

        jToggleButtonDidan5.setText("دیدن");
        jToggleButtonDidan5.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jToggleButtonDidan5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonDidan5ActionPerformed(evt);
            }
        });
        jPanel19.add(jToggleButtonDidan5);

        jSpinnertime.setModel(new javax.swing.SpinnerNumberModel(20, null, null, 1));
        jSpinnertime.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnertimeStateChanged(evt);
            }
        });
        jPanel19.add(jSpinnertime);

        jPanel26.add(jPanel19);

        jToggleButtonTimer.setText("شمردن یا نشمردن");
        jToggleButtonTimer.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jToggleButtonTimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonTimerActionPerformed(evt);
            }
        });
        jPanel26.add(jToggleButtonTimer);

        jButton5.setBackground(new java.awt.Color(0, 255, 51));
        jButton5.setText("پاسخ");
        jButton5.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel26.add(jButton5);

        jPanel30.add(jPanel26, java.awt.BorderLayout.EAST);

        jPanel14.setLayout(new java.awt.GridLayout(1, 0));

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("SHayan1", 1, 18)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("سوال از اچیست");
        jTextArea1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane1.setViewportView(jTextArea1);

        jPanel14.add(jScrollPane1);

        jPanel30.add(jPanel14, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel30);

        jPanel20.setLayout(new java.awt.GridLayout(1, 0));

        jPanel16.setPreferredSize(new java.awt.Dimension(133, 75));
        jPanel16.setLayout(new java.awt.GridLayout(0, 1));

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel4.setLayout(new java.awt.GridLayout(1, 0));

        buttonGroupCorrectAnswer.add(jCheckBox1);
        jCheckBox1.setText("درست");
        jCheckBox1.setActionCommand("1");
        jCheckBox1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jPanel4.add(jCheckBox1);

        jPanel25.setLayout(new java.awt.GridLayout(1, 0));

        jButtonSelect.setText("انتخاب");
        jButtonSelect.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jButtonSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelectActionPerformed(evt);
            }
        });
        jPanel25.add(jButtonSelect);

        jPanel4.add(jPanel25);

        jPanel3.add(jPanel4, java.awt.BorderLayout.EAST);

        jPanel22.setPreferredSize(new java.awt.Dimension(60, 25));
        jPanel22.setLayout(new java.awt.BorderLayout());

        jTextFieldQ1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldQ1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldQ1.setText("گزینه یک");
        jTextFieldQ1.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jTextFieldQ1.setPreferredSize(new java.awt.Dimension(70, 35));
        jTextFieldQ1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldQ1KeyPressed(evt);
            }
        });
        jPanel22.add(jTextFieldQ1, java.awt.BorderLayout.CENTER);

        jToggleButtonDidan1.setText("دیدن");
        jToggleButtonDidan1.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jToggleButtonDidan1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonDidan1ActionPerformed(evt);
            }
        });
        jPanel22.add(jToggleButtonDidan1, java.awt.BorderLayout.WEST);

        jPanel3.add(jPanel22, java.awt.BorderLayout.CENTER);

        jPanel16.add(jPanel3);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel6.setLayout(new java.awt.GridLayout(1, 0));

        buttonGroupCorrectAnswer.add(jCheckBox2);
        jCheckBox2.setText("درست");
        jCheckBox2.setActionCommand("2");
        jCheckBox2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        jPanel6.add(jCheckBox2);

        jButtonSelect1.setText("انتخاب");
        jButtonSelect1.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jButtonSelect1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelect1ActionPerformed(evt);
            }
        });
        jPanel6.add(jButtonSelect1);

        jPanel5.add(jPanel6, java.awt.BorderLayout.EAST);

        jPanel23.setLayout(new java.awt.BorderLayout());

        jTextFieldQ2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldQ2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldQ2.setText("گزینه یک");
        jTextFieldQ2.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jTextFieldQ2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldQ2KeyPressed(evt);
            }
        });
        jPanel23.add(jTextFieldQ2, java.awt.BorderLayout.CENTER);

        jToggleButtonDidan2.setText("دیدن");
        jToggleButtonDidan2.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jToggleButtonDidan2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonDidan2ActionPerformed(evt);
            }
        });
        jPanel23.add(jToggleButtonDidan2, java.awt.BorderLayout.WEST);

        jPanel5.add(jPanel23, java.awt.BorderLayout.CENTER);

        jPanel16.add(jPanel5);

        jPanel7.setLayout(new java.awt.BorderLayout());

        jPanel24.setLayout(new java.awt.BorderLayout());

        jTextFieldQ3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldQ3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldQ3.setText("گزینه یک");
        jTextFieldQ3.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jTextFieldQ3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldQ3KeyPressed(evt);
            }
        });
        jPanel24.add(jTextFieldQ3, java.awt.BorderLayout.CENTER);

        jToggleButtonDidan3.setText("دیدن");
        jToggleButtonDidan3.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jToggleButtonDidan3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonDidan3ActionPerformed(evt);
            }
        });
        jPanel24.add(jToggleButtonDidan3, java.awt.BorderLayout.WEST);

        jPanel7.add(jPanel24, java.awt.BorderLayout.CENTER);

        jPanel8.setLayout(new java.awt.GridLayout(1, 0));

        buttonGroupCorrectAnswer.add(jCheckBox3);
        jCheckBox3.setText("درست");
        jCheckBox3.setActionCommand("3");
        jCheckBox3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });
        jPanel8.add(jCheckBox3);

        jButtonSelect2.setText("انتخاب");
        jButtonSelect2.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jButtonSelect2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelect2ActionPerformed(evt);
            }
        });
        jPanel8.add(jButtonSelect2);

        jPanel7.add(jPanel8, java.awt.BorderLayout.EAST);

        jPanel16.add(jPanel7);

        jPanel9.setLayout(new java.awt.BorderLayout());

        jPanel27.setLayout(new java.awt.BorderLayout());

        jTextFieldQ4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldQ4.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldQ4.setText("گزینه یک");
        jTextFieldQ4.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jTextFieldQ4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldQ4KeyPressed(evt);
            }
        });
        jPanel27.add(jTextFieldQ4, java.awt.BorderLayout.CENTER);

        jToggleButtonDidan4.setText("دیدن");
        jToggleButtonDidan4.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jToggleButtonDidan4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonDidan4ActionPerformed(evt);
            }
        });
        jPanel27.add(jToggleButtonDidan4, java.awt.BorderLayout.WEST);

        jPanel9.add(jPanel27, java.awt.BorderLayout.CENTER);

        jPanel12.setLayout(new java.awt.GridLayout(1, 0));

        buttonGroupCorrectAnswer.add(jCheckBox4);
        jCheckBox4.setText("درست");
        jCheckBox4.setActionCommand("4");
        jCheckBox4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });
        jPanel12.add(jCheckBox4);

        jButtonSelect3.setText("انتخاب");
        jButtonSelect3.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jButtonSelect3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelect3ActionPerformed(evt);
            }
        });
        jPanel12.add(jButtonSelect3);

        jPanel9.add(jPanel12, java.awt.BorderLayout.EAST);

        jPanel16.add(jPanel9);

        jPanel20.add(jPanel16);

        jPanel1.add(jPanel20);

        add(jPanel1);
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if (newsha) {
            updateCurrentQ();
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
        if (newsha) {
            updateCurrentQ();
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
        if (newsha) {
            updateCurrentQ();
        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jComboBoxBasketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxBasketActionPerformed
        // TODO add your handling code here:
        if (newsha) {
            jcomboBasketreselect(evt);
        }
    }//GEN-LAST:event_jComboBoxBasketActionPerformed

    private void jComboBoxindexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxindexActionPerformed
        // TODO add your handling code here:
        if (newsha) {
            reselectQIndex();
        }
    }//GEN-LAST:event_jComboBoxindexActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (newsha) {
            updateout();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (newsha) {
            addqustion();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCheckBoxUsedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxUsedActionPerformed
        // TODO add your handling code here:
        updateCurrentQ();
    }//GEN-LAST:event_jCheckBoxUsedActionPerformed

    private void jButtonSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelectActionPerformed
        // TODO add your handling code here:
        if (newsha) {
            selectGoz(1);
        }
    }//GEN-LAST:event_jButtonSelectActionPerformed

    private void jButtonSelect1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelect1ActionPerformed
        // TODO add your handling code here:
        if (newsha) {
            selectGoz(2);
        }
    }//GEN-LAST:event_jButtonSelect1ActionPerformed

    private void jButtonSelect2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelect2ActionPerformed
        // TODO add your handling code here:
        if (newsha) {
            selectGoz(3);
        }
    }//GEN-LAST:event_jButtonSelect2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (newsha) {
//            gozselected = true;
//            gozSelectedN = -1;
            showAnswer();
//            sounds.playRedNonStop();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jToggleButtonDidan1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonDidan1ActionPerformed
        // TODO add your handling code here:
        if (newsha) {
            showqG(1, jToggleButtonDidan1.isSelected());
        }
    }//GEN-LAST:event_jToggleButtonDidan1ActionPerformed

    private void jToggleButtonDidan2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonDidan2ActionPerformed
        // TODO add your handling code here:
        if (newsha) {
            showqG(2, jToggleButtonDidan2.isSelected());
        }
    }//GEN-LAST:event_jToggleButtonDidan2ActionPerformed

    private void jToggleButtonDidan3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonDidan3ActionPerformed
        // TODO add your handling code here:
        if (newsha) {
            showqG(3, jToggleButtonDidan3.isSelected());
        }
    }//GEN-LAST:event_jToggleButtonDidan3ActionPerformed

    private void jToggleButtonTimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonTimerActionPerformed
        // TODO add your handling code here:
        if (newsha) {
            timerActive = jToggleButtonTimer.isSelected();
        }
    }//GEN-LAST:event_jToggleButtonTimerActionPerformed

    private void jSpinnertimeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnertimeStateChanged
        // TODO add your handling code here:
        if (newsha) {
            timerq = (int) (jSpinnertime.getValue()) * 1000;
            updateout();
        }
    }//GEN-LAST:event_jSpinnertimeStateChanged

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        if (newsha) {
            resetq();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (newsha) {
            readfile();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonclearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonclearAllActionPerformed
        // TODO add your handling code here:
        if (newsha) {
            clearallQuestions();
        }
    }//GEN-LAST:event_jButtonclearAllActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (newsha) {
            removecurrentQ();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jToggleButtonShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonShowActionPerformed
        // TODO add your handling code here:

        if (newsha) {
            showGozandtime(jToggleButtonShow.isSelected());
        }
    }//GEN-LAST:event_jToggleButtonShowActionPerformed

    private void jToggleButtonDidan4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonDidan4ActionPerformed
        // TODO add your handling code here:
        if (newsha) {
            showqG(4, jToggleButtonDidan4.isSelected());
        }
    }//GEN-LAST:event_jToggleButtonDidan4ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        // TODO add your handling code here:
        if (newsha) {
            updateCurrentQ();
        }
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jButtonSelect3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelect3ActionPerformed
        // TODO add your handling code here:
        if (newsha) {
            selectGoz(4);
        }
    }//GEN-LAST:event_jButtonSelect3ActionPerformed

    private void jSpinnertimeMainStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnertimeMainStateChanged
        // TODO add your handling code here:
        if (newsha) {
            updateCurrentQ();
        }
    }//GEN-LAST:event_jSpinnertimeMainStateChanged

    private void jTextFieldQ1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQ1KeyPressed
        if (newsha) {
            updateCurrentQ();
        }

    }//GEN-LAST:event_jTextFieldQ1KeyPressed

    private void jTextFieldQ2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQ2KeyPressed
        if (newsha) {
            updateCurrentQ();
        }
    }//GEN-LAST:event_jTextFieldQ2KeyPressed

    private void jTextFieldQ3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQ3KeyPressed
        if (newsha) {
            updateCurrentQ();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldQ3KeyPressed

    private void jTextFieldQ4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQ4KeyPressed
        if (newsha) {
            updateCurrentQ();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldQ4KeyPressed

    private void jToggleButtonDidan5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonDidan5ActionPerformed
        // TODO add your handling code here:
        if (newsha) {
            showTimer(jToggleButtonDidan5.isSelected());
        }
    }//GEN-LAST:event_jToggleButtonDidan5ActionPerformed

    private void jToggleButtonDidan0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonDidan0ActionPerformed
        // TODO add your handling code here:
        if (newsha) {
            gameQShow(jToggleButtonDidan0.isSelected());
        }
    }//GEN-LAST:event_jToggleButtonDidan0ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupCorrectAnswer;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButtonSelect;
    private javax.swing.JButton jButtonSelect1;
    private javax.swing.JButton jButtonSelect2;
    private javax.swing.JButton jButtonSelect3;
    private javax.swing.JButton jButtonclearAll;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBoxUsed;
    private javax.swing.JComboBox<String> jComboBoxBasket;
    private javax.swing.JComboBox<String> jComboBoxindex;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnertime;
    private javax.swing.JSpinner jSpinnertimeMain;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextFieldQ1;
    private javax.swing.JTextField jTextFieldQ2;
    private javax.swing.JTextField jTextFieldQ3;
    private javax.swing.JTextField jTextFieldQ4;
    private javax.swing.JToggleButton jToggleButtonDidan0;
    private javax.swing.JToggleButton jToggleButtonDidan1;
    private javax.swing.JToggleButton jToggleButtonDidan2;
    private javax.swing.JToggleButton jToggleButtonDidan3;
    private javax.swing.JToggleButton jToggleButtonDidan4;
    private javax.swing.JToggleButton jToggleButtonDidan5;
    private javax.swing.JToggleButton jToggleButtonShow;
    private javax.swing.JToggleButton jToggleButtonTimer;
    // End of variables declaration//GEN-END:variables

    @Override
    public void updatetime(long time) {
        int x = (int) (time - timeMain);
        timeMain = time;
        if (timerActive) {
            if (timerq > x) {
                timerq = timerq - x;
                settimespinner();
            } else {
                timerq = 0;
                timerActive = false;
                settimespinner();
            }

        }
    }

    private void jcomboBasketreselect(ActionEvent evt) {
        selectedBasket = jComboBoxBasket.getSelectedIndex();

        reselectQuestionBySelectingBasket();
    }

    public void reselectQuestionBySelectingBasket() {

        if (database.getqbasket(selectedBasket).size() > 0) {
            questionIndexSelected = -1;
            newsha = false;
            jComboBoxindex.removeAll();
            jComboBoxindex.removeAllItems();
            for (int i = 0; i < database.getqbasket(selectedBasket).size(); i++) {
                jComboBoxindex.addItem(i + "-" + database.getQuestion(selectedBasket, i).getCuurectGoz());
                if (!database.getQuestion(selectedBasket, i).isUsed() && questionIndexSelected == -1) {
                    questionIndexSelected = i;
                }
            }
            if (questionIndexSelected == -1) {
                questionIndexSelected = 0;
            }
            newsha = true;
            jComboBoxindex.setSelectedIndex(questionIndexSelected);
//            jSpinnertime.setValue(database0.getTimeGameq());

        }
    }

    private void reselectQIndex() {

        newsha = false;
        questionIndexSelected = jComboBoxindex.getSelectedIndex();
        Questions q = database.getQuestion(selectedBasket, questionIndexSelected);
        jTextArea1.setText(q.getQuestion());
        jTextFieldQ1.setText(q.getGoz1());
        jTextFieldQ2.setText(q.getGoz2());
        jTextFieldQ3.setText(q.getGoz3());
        jTextFieldQ4.setText(q.getGoz4());
        jSpinnertimeMain.setValue(q.getTime());
        jSpinnertime.setValue(q.getTime());
        timerq = q.getTime() * 1000;

        jCheckBoxUsed.setSelected(q.isUsed());
        switch (q.getCorrect_goz()) {
            case 1:
                jCheckBox1.setSelected(true);
                break;
            case 2:
                jCheckBox2.setSelected(true);
                break;
            case 3:
                jCheckBox3.setSelected(true);
                break;
            case 4:
                jCheckBox4.setSelected(true);
                break;
            default:
                jCheckBox1.setSelected(true);
                break;

        }

        gozselected = false;
        newsha = true;

    }

    public void resetTime() {
        if (jComboBoxBasket.getSelectedIndex() == 9) {
            resetTime(database.getTimeGameFinal());
        } else {
            resetTime(database.getTimeGameq());
        }

    }

    public void resetTime(int time) {
        newsha = false;
        jSpinnertime.setValue(time);
        timerq = (int) (jSpinnertime.getValue()) * 1000 + 999;
        newsha = true;
    }

    private void updateCurrentQ() {
        if (newsha) {

            database.setqQuestion(selectedBasket, questionIndexSelected, getcurrentQuestion());
            updatejcombo(questionIndexSelected);
        }
        controll.saveDatabase0();
//        updatejcombo(jComboBoxindex.getSelectedIndex());
    }

    private void addqustion() {
//        int x = database0.getqbasket(selectedBasket).size();
        int x = jComboBoxindex.getSelectedIndex();
        database.getqbasket(selectedBasket).add(x + 1, clearQuestion());
        reselectQuestionBySelectingBasket();
//        jComboBoxindex.addItem("?");//database.getQuestion(selectedBasket,x).getQuestion()
        jComboBoxindex.setSelectedIndex(x + 1);
        controll.saveDatabase0();
    }

    private Questions getcurrentQuestion() {
        Questions q = new Questions();
        q.setQuestion(jTextArea1.getText());
        q.setGoz1(jTextFieldQ1.getText());
        q.setGoz2(jTextFieldQ2.getText());
        q.setGoz3(jTextFieldQ3.getText());
        q.setGoz4(jTextFieldQ4.getText());
        q.setUsed(jCheckBoxUsed.isSelected());
        q.setTime((int) jSpinnertimeMain.getValue());
        int x = 0;
        x = Integer.parseInt(buttonGroupCorrectAnswer.getSelection().getActionCommand());
        q.setCorrect_goz(x);
        return q;
    }

    public int getCorrectGoz() {
        int x = 0;
        x = Integer.parseInt(buttonGroupCorrectAnswer.getSelection().getActionCommand());
        return x;
    }

    private Questions clearQuestion() {
        Questions q = new Questions();
        q.setQuestion("");
        q.setGoz1("");
        q.setGoz2("");
        q.setGoz3("");
        q.setGoz4("");
        q.setTime(database.getBasketTime(jComboBoxBasket.getSelectedIndex()));
        return q;
    }

    private void updatejcombo(int index) {
//        System.out.println("database0.getqbasket(selectedBasket).size()=" + database0.getqbasket(selectedBasket).size() + "    index=" + index);
        boolean newshaold = newsha;
        if (database.getqbasket(selectedBasket).size() > 0) {
            newsha = false;
            jComboBoxindex.removeAll();
            jComboBoxindex.removeAllItems();
            for (int i = 0; i < database.getqbasket(selectedBasket).size(); i++) {

                jComboBoxindex.addItem(i + "-" + database.getQuestion(selectedBasket, i).getCuurectGoz());

            }
            newsha = newshaold;
            jComboBoxindex.setSelectedIndex(index);
        }
    }

    void setSelectedBasket(int i) {
        if (i == jComboBoxBasket.getSelectedIndex()) {
            jComboBoxBasket.setSelectedIndex(i);
            reselectQuestionBySelectingBasket();
        } else {
            jComboBoxBasket.setSelectedIndex(i);
        }

        if (i == 9) {
            resetTime(database.getTimeGameFinal());
        } else {
            resetTime(database.getTimeGameq());
        }
//        naMain.qgameUpdate(false, getcurrentQuestion(), (int) (timerq / 1000));
    }

    public Questions getqAndUsed(boolean isusing) {
        Questions q = getcurrentQuestion();
        jCheckBoxUsed.setSelected(isusing);
        updateCurrentQ();
        return q;
    }

    private void updateout() {

        controlPackUpdateSend(true);
        controll.saveDatabase0();
    }

    protected void showGameQandGoz() {
        jCheckBoxUsed.setSelected(true);
        jToggleButtonShow.setSelected(true);
        gameQShow(true);
        updateCurrentQ();
    }

//    public void activeShow(boolean activeShow) {
//        jButtonshow.setEnabled(activeShow);
//    }
    public void selectGoz(int i) {
        if (gozselected) {
            switch (i) {
                case 1:
//                    controll.getControllCommandSet().runDatabaseMotion("select_1_NO");
                    controll.getControllCommandSet().runDatabaseMotion("select_2_NO");
                    controll.getControllCommandSet().runDatabaseMotion("select_3_NO");
                    controll.getControllCommandSet().runDatabaseMotion("select_4_NO");
                    break;
                case 2:
                    controll.getControllCommandSet().runDatabaseMotion("select_1_NO");
//                    controll.getControllCommandSet().runDatabaseMotion("select_2_NO");
                    controll.getControllCommandSet().runDatabaseMotion("select_3_NO");
                    controll.getControllCommandSet().runDatabaseMotion("select_4_NO");
                    break;
                case 3:
                    controll.getControllCommandSet().runDatabaseMotion("select_1_NO");
                    controll.getControllCommandSet().runDatabaseMotion("select_2_NO");
//                    controll.getControllCommandSet().runDatabaseMotion("select_3_NO");
                    controll.getControllCommandSet().runDatabaseMotion("select_4_NO");
                    break;
                case 4:
                    controll.getControllCommandSet().runDatabaseMotion("select_1_NO");
                    controll.getControllCommandSet().runDatabaseMotion("select_2_NO");
                    controll.getControllCommandSet().runDatabaseMotion("select_3_NO");
//                    controll.getControllCommandSet().runDatabaseMotion("select_4_NO");
                    break;
            }

        }
        gozselected = true;
        gozSelectedN = i;
//        controlPackUpdateSend(true);
//        if (database0.getSelectedgame() != 9) {
        timerActive = false;
        jToggleButtonTimer.setSelected(false);
        switch (i) {
            case 1:
                controll.getControllCommandSet().runDatabaseMotion("select_1");
                break;
            case 2:
                controll.getControllCommandSet().runDatabaseMotion("select_2");
                break;
            case 3:
                controll.getControllCommandSet().runDatabaseMotion("select_3");
                break;
            case 4:
                controll.getControllCommandSet().runDatabaseMotion("select_4");
                break;
        }
        naMain.updatecontrolpack(true);
//        if (gozselected && gozSelectedN + 1 == getcurrentQuestion().getCorrect_goz()) {
//            sounds.playWinNonStop();
//        } else {
//            sounds.playRedNonStop();
//        }
    }

    private void showAnswer() {
//        controlPackUpdateSend(true);
//        if (database0.getSelectedgame() != 9) {
//            timerActive = false;
//            jToggleButtonTimer.setSelected(false);
//        }
//        naMain.qgameUpdate(false, getcurrentQuestion(), (int) (timerq / 1000));
        if (gozselected) {
            naMain.showAnswer(gozSelectedN == getCorrectGoz());

        }
    }

    private void showqG(int i, boolean selected) {
        jCheckBoxUsed.setSelected(true);
        if (selected) {
            controlPackUpdateSend(false);
            switch (i) {
                case 1:
                    controll.getControllCommandSet().runDatabaseMotion("Goz1_in");
                    break;
                case 2:
                    controll.getControllCommandSet().runDatabaseMotion("Goz2_in");
                    break;
                case 3:
                    controll.getControllCommandSet().runDatabaseMotion("Goz3_in");
                    break;
                case 4:
                    controll.getControllCommandSet().runDatabaseMotion("Goz4_in");
                    break;
                default:
                    break;
            }
        } else {
            switch (i) {
                case 1:
                    controll.getControllCommandSet().runDatabaseMotion("Goz1_out");
                    break;
                case 2:
                    controll.getControllCommandSet().runDatabaseMotion("Goz2_out");
                    break;
                case 3:
                    controll.getControllCommandSet().runDatabaseMotion("Goz3_out");
                    break;
                case 4:
                    controll.getControllCommandSet().runDatabaseMotion("Goz4_out");
                    break;
                default:
                    break;
            }
        }
        controll.SendControolPack();
    }

    private void timeEnded() {

        sendtime();
//        controll.getSounds().playTimeOut();
    }

    private void sendtime() {
//        int b = database.getSettingitemIdforgame(0);

        controlPackUpdateSend(true);
//        if ((int) jSpinnertime.getValue() == 0) {
//            controolPack.addDataPackanimationStartEnds(b + 18, 0, 0);
//        }  else  controolPack.addDataPackanimationStartEnds(b + 18, 0, controll.getSettingPack().getDrawSettings(b+18).getSequencCount()-1);
//        controll.getControllCommandSet().playImageseq(true, b + 18);
    }

    private void settimespinner() {
        int t = timerq / 1000;
        if (t != (int) jSpinnertime.getValue()) {
            newsha = false;
            jSpinnertime.setValue(t);
            newsha = true;
            if (t == 0) {
//                controlPackUpdateSend(true);
//                naMain.qgameUpdate(true, getcurrentQuestion(), (int) (timerq / 1000));
                timeEnded();
            } else {
                sendtime();
                if (t < 6) {
//                    controll.getSounds().playdouble_beep_beep();
                }
            }
        }
    }

    private void resetq() {
        naMain.clearQ();
        updateCurrentQ();
        jSpinnertime.setValue((int) jSpinnertimeMain.getValue());
    }

    private void readfile() {
        int index = jComboBoxindex.getSelectedIndex() + 1;

        FileReader fileReader = null;
        BufferedReader reader = null;

        java.awt.FileDialog fd = new java.awt.FileDialog(new JFrame(" question file"), "سوال خوان", java.awt.FileDialog.LOAD);
//fd.setMultipleMode(true);
//        fd.setDirectory("\\src\\");
        fd.setVisible(true);

        if (fd.getFile() == null) {
            return;
        } else {
            try {
                File file = fd.getFiles()[0];

                reader = new BufferedReader(
                        new InputStreamReader(
                                new FileInputStream(file), "UTF8"));
                String st = "";

                int number = 1;
                while (reader.readLine() != null) {
                    Questions q = new Questions();
                    st = reader.readLine();
                    q.setQuestion(st);
                    st = reader.readLine();
                    if (st == null) {
                        return;
                    }
                    q.setGoz1(st);
                    st = reader.readLine();
                    if (st == null) {
                        return;
                    }
                    q.setGoz2(st);
                    st = reader.readLine();
                    if (st == null) {
                        return;
                    }
                    q.setGoz3(st);
                    st = reader.readLine();
                    if (st == null) {
                        return;
                    }
//                    System.out.println("st=" + st);
                    number = Integer.parseInt(st.replaceAll(" ", ""));
                    q.setCorrect_goz(number);

                    database.getqbasket(selectedBasket).add(index, q);
                    index++;

                }

            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(PanelQuestions.class.getName()).log(Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(PanelQuestions.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(PanelQuestions.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
//                fileReader.close();
                    reader.close();
                    controll.saveDatabase0();
                    jComboBoxBasket.setSelectedIndex(jComboBoxBasket.getSelectedIndex());
                } catch (IOException ex) {

                }

            }
        }
        controll.saveDatabase0();
        jComboBoxBasket.setSelectedIndex(jComboBoxBasket.getSelectedIndex());
    }

    private void clearallQuestions() {
        database.getqAllbasket()[selectedBasket].clear();
        database.getqAllbasket()[selectedBasket].add(getcurrentQuestion());
        jComboBoxBasket.setSelectedIndex(selectedBasket);
        controll.saveDatabase0();
    }

    private void removecurrentQ() {
        database.getqAllbasket()[selectedBasket].remove(jComboBoxindex.getSelectedIndex());
        jComboBoxBasket.setSelectedIndex(selectedBasket);
        controll.saveDatabase0();
    }

    void clearSelection() {
        newsha = false;
        timerActive = false;
        jToggleButtonDidan0.setSelected(false);
        jToggleButtonTimer.setSelected(false);
//        jToggleButtonShow.setSelected(false);
        jToggleButtonDidan1.setSelected(false);
        jToggleButtonDidan3.setSelected(false);
        jToggleButtonDidan2.setSelected(false);
        newsha = true;
    }

    void gameQShowAnswer(boolean gozselected, int gozSelectedN, int correct_goz) {
//        int b = database0.getSettingitemIdforgame(0);//30
//        controll.getControllCommandSet().imageVisPlayMotion(false, b + 15, 0);  //endtime
//
//        int addforfinalQ = 0;
//        if (database0.getSelectedgame() == 9) {
//            addforfinalQ = 3;
//        }
//        controll.getControllCommandSet().playMotion(b - 1, 0);
//        if (gozselected && (gozSelectedN + 1 != correct_goz)) {
//
//            controll.getControllCommandSet().imagePlayseq(b - 3, addforfinalQ + gozSelectedN + 1);
//            controolPack.getDataPackanimationStartEnds().add(new DataPackanimationStartEnd(b - 3, addforfinalQ + gozSelectedN + 1, addforfinalQ + gozSelectedN + 1));
//            controll.getControllCommandSet().imageVisPlayMotion(true, b - 3, addforfinalQ + gozSelectedN + 1);
//        }
//        controll.getControllCommandSet().imagePlayseq(b - 2, correct_goz + addforfinalQ);
//        controolPack.getDataPackanimationStartEnds().add(new DataPackanimationStartEnd(b - 2, correct_goz + addforfinalQ, correct_goz + addforfinalQ));
//        controll.getControllCommandSet().imageVisPlayMotion(true, b - 2, correct_goz + addforfinalQ);
//
//        controll.SendControolPack();
//        if (gozselected && gozSelectedN + 1 == correct_goz) {
//            sounds.playWinNonStop();
//        } else {
//            sounds.playRedNonStop();
//        }

    }

    private void gameQShow(boolean showHide) {
        gozselected = false;
        int b = database.getSettingitemIdforgame(0);
        if (showHide) {
            controlPackUpdateSend(false);

            controll.getControllCommandSet().runDatabaseMotion("Qshow1_in");
        } else {

            controll.getControllCommandSet().runDatabaseMotion("Qshow1_out");
        }
        controll.SendControolPack();
    }

    private void controlPackUpdateSend(boolean send) {
//        int b = database.getSettingitemIdforgame(0);
        Questions q = getcurrentQuestion();
        controolPack.addDatapackStringPersion(64, q.getQuestion());
        controolPack.addDatapackStringPersion(112, "" + (q.getTime() - (int) jSpinnertime.getValue()));
        controolPack.addDatapackStringPersion(115, (int) jSpinnertime.getValue() + " / " + (q.getTime()));

        controolPack.addDatapackStringPersion(124, q.getGoz1());
        controolPack.addDatapackStringPersion(128, q.getGoz2());
        controolPack.addDatapackStringPersion(132, q.getGoz3());
        controolPack.addDatapackStringPersion(136, q.getGoz4());

//        controolPack.addDataPackanimationStartEnds(b + 12, 0, 0);
//        controolPack.addDataPackanimationStartEnds(b + 14, 0, 0);
//        controolPack.addDataPackanimationStartEnds(b + 16, 0, 0);
//        controolPack.setimagePlay(b + 12, true);
//        controolPack.setimagePlay(b + 14, true);
//        controolPack.setimagePlay(b + 16, true);
// if (gozselected) {
//            int item;
//            if (gozSelectedN == -1) {            
//                 controolPack.addDataPackanimationStartEnds(b + 12, 1, 1);
//                  controolPack.addDataPackanimationStartEnds(b + 14, 1, 1);
//                   controolPack.addDataPackanimationStartEnds(b + 16, 1, 1);
//            } else if (gozSelectedN + 1 != q.getCorrect_goz()) {
//                item = b + 12 + (gozSelectedN * 2);
//                controolPack.addDataPackanimationStartEnds(item, 1, 1);
////                controolPack.setimagePlay(item, true);
//            }
//            item = b + 12 + ((q.getCorrect_goz() - 1) * 2);
//            controolPack.addDataPackanimationStartEnds(item, 2, 2);
////            controolPack.setimagePlay(item, true);
//        }
//        controolPack.addDatapackString(b + 11, q.getQuestion());
//        controolPack.addDatapackString(b + 13, q.getGoz1());
//        controolPack.addDatapackString(b + 15, q.getGoz2());
//        controolPack.addDatapackString(b + 17, q.getGoz3());
//        controolPack.addDatapackString(b + 19, "" + (int) (timerq / 1000));
//        if (send) {
//            controll.SendControolPack();
//            controolPack.setimagePlay(b + 12, false);
//            controolPack.setimagePlay(b + 14, false);
//            controolPack.setimagePlay(b + 16, false);
//        }
        if (send) {
            controll.SendControolPack();
        }
    }

    public int getcurrentQtime() {
        return (int) jSpinnertimeMain.getValue();
    }

//    void Qended(int selectedGoz) {
//        if (newsha) {
//            jToggleButtonTimer.setSelected(false);
//            timerActive = jToggleButtonTimer.isSelected();
//        }
//        
//    }
    int getSelectedGoz() {
        return gozSelectedN;
    }

    private void showTimer(boolean onOff) {
        if (onOff) {
            controlPackUpdateSend(false);
            controll.getControllCommandSet().runDatabaseMotion("Timer_in");
            controll.SendControolPack();
        } else {
            controll.getControllCommandSet().runDatabaseMotion("Timer_out");
            controll.SendControolPack();
        }

    }

    private void showGozandtime(boolean OnOff) {
        if (OnOff) {
            if(!jToggleButtonTimer.isSelected()){
                resetq();
               jToggleButtonTimer.setSelected(true);
                timerActive = jToggleButtonTimer.isSelected();
            }
           
            controll.getControllCommandSet().runDatabaseMotion("Timer_in");
            controll.getControllCommandSet().runDatabaseMotion("Goz1_in");
            controll.getControllCommandSet().runDatabaseMotion("Goz2_in");
            controll.getControllCommandSet().runDatabaseMotion("Goz3_in");
            controll.getControllCommandSet().runDatabaseMotion("Goz4_in");

        }
        else {
            controll.getControllCommandSet().runDatabaseMotion("Timer_out");
            controll.getControllCommandSet().runDatabaseMotion("Goz1_out");
            controll.getControllCommandSet().runDatabaseMotion("Goz2_out");
            controll.getControllCommandSet().runDatabaseMotion("Goz3_out");
            controll.getControllCommandSet().runDatabaseMotion("Goz4_out");
        }
         jToggleButtonDidan1.setSelected(OnOff);
          jToggleButtonDidan2.setSelected(OnOff);
           jToggleButtonDidan3.setSelected(OnOff);
            jToggleButtonDidan4.setSelected(OnOff);
            jToggleButtonDidan5.setSelected(OnOff);
           
        naMain.updatecontrolpack(true);
    }
}
